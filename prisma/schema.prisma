// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  books         Book[] // Changed from 'Book' to 'books' to reflect the one-to-many relationship
  reviews       Review[] // Add this to represent that a user can have many reviews
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Book {
  id     String @id @default(cuid())
  title  String
  author String
  genre  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId  String // Renamed from createdById for clarity
  reviews Review[] // One-to-many relationship with Review

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) // Renamed from createdBy
}

model Review {
  id          String @id @default(cuid())
  rating      Int
  description String // Add this field for the description by the reviewer

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String // Renamed from createdById for clarity
  bookId String // Matches the Book's id field type

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) // Renamed from createdBy
  book Book @relation(fields: [bookId], references: [id])
}
